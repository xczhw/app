apiVersion: v1
kind: Pod
metadata:
  name: load-generator
spec:
  containers:
  - name: load-generator
    image: python:3.9-slim
    command: ["/bin/sh", "-c"]
    args:
    - |
      pip install requests
      cat > load_generator.py << 'EOF'
      import requests
      import threading
      import uuid
      import time
      import sys

      # 服务地址 - 在集群内使用服务名
      SERVICE_URL = "http://cpu-load-svc"
      # 请求总数
      TOTAL_REQUESTS = 100
      # 结果跟踪
      results = {"success": 0, "failed": 0}
      # 锁，用于线程安全更新结果
      results_lock = threading.Lock()

      def send_request():
          request_id = str(uuid.uuid4())
          try:
              response = requests.get(
                  SERVICE_URL,
                  headers={"X-Request-ID": request_id},
                  timeout=40
              )
              with results_lock:
                  results["success"] += 1
              print(f"请求 {request_id} 成功")
          except Exception as e:
              with results_lock:
                  results["failed"] += 1
              print(f"请求 {request_id} 失败: {str(e)}")

      # 启动多个线程发送请求
      threads = []
      for i in range(TOTAL_REQUESTS):
          t = threading.Thread(target=send_request)
          threads.append(t)
          t.start()
          # 每0.1秒发送一个请求
          time.sleep(0.1)

      # 等待所有请求完成
      for t in threads:
          t.join()

      # 打印结果
      print(f"结果统计: 成功 {results['success']}, 失败 {results['failed']}")
      EOF
      python load_generator.py